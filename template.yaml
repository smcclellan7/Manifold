AWSTemplateFormatVersion: "2010-09-09"
Description: A simple service that extracts a full name an zip code from a JSON and stores it in S3.

Parameters:
  NameAndZipBucketName:
    Type: String
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "name-and-zip"
    Description: "S3 bucket name for storing name and zip code info."

  ExtractAndStoreFunctionName:
    Type: String
    MaxLength: 64
    ConstraintDescription: "Lambda function name maximum length is 64."
    Default: "extract-and-store"
    Description: "Lambda function name for extracting and storing name and zip code info."

  ApiGatewayName:
    Type: String
    Default: "extract-and-store-api"
    Description: "REST API name for passing requests to Lambda."

  AnalyticsDatabaseName:
    Type: String
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription: "Glue database name can include numbers, lowercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "name-and-zip-analytics"
    Description: "Glue database name for analyzing name and zip code info."

  AnalyticsCrawlerName:
    Type: String
    Default: "name-and-zip-crawler"
    Description: "Glue Crawler name for pulling name and zip info into the analytics database."

  AnalyticsTableNamePrefix:
    Type: String
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription: "Glue table name prefix can include numbers, lowercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "name-and-zip"
    Description: "Prefix for Glue tables created by the analytics crawler."

Resources:
  # IAM Roles

  # TODO consider using more roles with narrower permissions.
  RootRole:
    Type: AWS::IAM::Role
    Properties:
      Description: A single role with all permissions.
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"

  # S3 Data Storage

  NameAndZipBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref NameAndZipBucketName

  NameAndZipBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NameAndZipBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AllowS3AccessToRootRole'
            Action:
              - 's3:*'
            Effect: 'Allow'
            Resource:
              - !GetAtt NameAndZipBucket.Arn
              - Fn::Join:
                  - ''
                  - - !GetAtt NameAndZipBucket.Arn
                    - '/*'
            Principal:
              AWS: !GetAtt RootRole.Arn

  # Lambda Function

  ExtractAndStore:
    Type: AWS::Lambda::Function
    Properties:
      Description: Extracts the full name and zip code from a JSON input, and stores it in S3.
      FunctionName: !Ref ExtractAndStoreFunctionName
      Handler: extract_and_store.handle
      Role: !GetAtt RootRole.Arn
      Runtime: 'python3.8'
      Environment:
        Variables:
          BUCKET_NAME: !Ref NameAndZipBucket
      Code: manifold/

  ExtractAndStorePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ExtractAndStore.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/POST/

  # REST API Gateway

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiGatewayName
      Description: "API gateway for the ExtractAndStore Lambda function."

  ApiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - LambdaArn: !GetAtt ExtractAndStore.Arn
      ResourceId: !GetAtt ApiGateway.RootResourceId
      RestApiId: !Ref ApiGateway

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayRootMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: Prod

  # Glue Analytics

  NameAndZipAnalyticsDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref AnalyticsDatabaseName
        Description: "A Glue database for doing analytics on the data stored in the NameAndZipBucket"

  NameAndZipCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref AnalyticsCrawlerName
      Role: !GetAtt RootRole.Arn
      DatabaseName: !Ref NameAndZipAnalyticsDatabase
      TablePrefix: !Ref AnalyticsTableNamePrefix
      Targets:
        S3Targets:
          - Path: !Ref NameAndZipBucket
      Configuration: "{\"Version\": 1.0,\"CrawlerOutput\":{\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: LOG
      Schedule:
        ScheduleExpression: cron(0/15 * * * ? *)
